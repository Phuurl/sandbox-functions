AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ec2-cleanup

  Lambda deployment to automatically clean up EC2 resources

Globals:
  Function:
    Timeout: 5

Parameters:
  CronScheduleParameter:
    Type: String
    Default: cron(30 0 * * ? *)
    Description: Enter the cron schedule for the CloudWatch Events trigger

Metadata:
  AWS::ServerlessRepo::Application:
    Name: ec2-cleanup
    Description: Lambda to automatically terminate EC2 instances daily that aren't tagged with 'preserve'.
    Author: Phuurl
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['ec2', 'sandbox', 'terminate', 'cleanup']
    HomePageUrl: https://github.com/Phuurl/sandbox-functions
    SemanticVersion: '1.1.0'
    SourceCodeUrl: https://github.com/Phuurl/sandbox-functions

Resources:
  EC2CleanupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ec2-cleanup/
      Handler: ec2-cleanup.lambda_handler
      Runtime: python3.8
      Policies:
        - Statement:
          - Sid: TerminateInstances
            Effect: Allow
            Action:
              - ec2:TerminateInstances
            Resource: 'arn:aws:ec2:*:*:instance/*'
          - Sid: ListInstances
            Effect: Allow
            Action:
              - ec2:DescribeInstances
              - ec2:DescribeTags
              - ec2:DescribeInstanceStatus
            Resource: '*'
      Events:
        CleanupSchedule:
          Type: Schedule
          Properties:
            Schedule:
              Ref: CronScheduleParameter
            Name: cleanup-cron
            Description: Cron trigger for ec2-cleanup
            Enabled: True

Outputs:
  EC2CleanupFunction:
    Description: "Terminates all EC2s not tagged with 'preserve' in the region daily"
    Value: !GetAtt EC2CleanupFunction.Arn
  EC2CleanupFunctionIamRole:
    Description: "Implicit IAM Role created for EC2 Cleanup function"
    Value: !GetAtt EC2CleanupFunctionRole.Arn
